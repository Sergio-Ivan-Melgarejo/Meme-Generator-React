{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","linea1","setLinea1","linea2","setLinea2","imagen","setImagen","className","onChange","evento","target","value","type","placeholder","onClick","html2canvas","document","querySelector","then","canvas","img","toDataURL","link","createElement","download","href","click","id","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gNAAe,I,4BCgEAA,MA3Df,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KA0BA,OACE,sBAAKC,UAAU,MAAf,UAEA,sBAAKA,UAAU,UAAf,UACE,yBAAQA,UAAU,aAAaC,SApBZ,SAASC,GAC9BH,EAAUG,EAAOC,OAAOC,QAmBtB,UACE,wBAAQA,MAAM,OAAd,4BACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,6BACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,gBAAd,2BACA,wBAAQA,MAAM,QAAd,uBACA,wBAAQA,MAAM,UAAd,uBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,wBAEF,uBAAOJ,UAAU,UAAUC,SAvCR,SAASC,GAC9BP,EAAUO,EAAOC,OAAOC,QAsC+BC,KAAK,OAAOC,YAAY,YAC7E,uBAAON,UAAU,UAAUC,SApCR,SAASC,GAC9BL,EAAUK,EAAOC,OAAOC,QAmC+BC,KAAK,OAAOC,YAAY,YAC7E,wBAAQC,QA7BY,WACP,KAAVb,GAA2B,KAAVE,GAA4B,KAAVE,GACtCU,IAAYC,SAASC,cAAc,UAAUC,MAAK,SAAAC,GAChD,IAAIC,EAAMD,EAAOE,UAAU,aACvBC,EAAON,SAASO,cAAc,KAClCD,EAAKE,SAAW,WAChBF,EAAKG,KAAOL,EACZE,EAAKI,YAsB2BnB,UAAU,cAA5C,0BAGF,sBAAKA,UAAU,YAAYoB,GAAG,OAA9B,UACE,sBAAMpB,UAAU,UAAhB,SAA2BN,IAC3B,sBAAMM,UAAU,UAAhB,SAA2BJ,IAC3B,qBAAKI,UAAU,SAASqB,IAAK,aAAevB,EAAS,gBC7C5CwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASwB,eAAe,SAM1BX,M","file":"static/js/main.b06d7cd5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport html2canvas from 'html2canvas';\n\nfunction App() {\n  const [linea1, setLinea1] = useState('');\n  const [linea2, setLinea2] = useState('');\n  const [imagen, setImagen] = useState('');\n\n  const onChangeLinea1 = function(evento){\n    setLinea1(evento.target.value)\n  };\n\n  const onChangeLinea2 = function(evento){\n    setLinea2(evento.target.value)\n  };\n\n  const onChangeImagen = function(evento){\n    setImagen(evento.target.value)\n  };\n\n  const onClickExportar = function(){\n    if((!linea1 == \"\" || !linea2 == \"\") && !imagen == \"\"){\n      html2canvas(document.querySelector(\"#meme\")).then(canvas => {\n        let img = canvas.toDataURL(\"image/png\");\n        let link = document.createElement('a');\n        link.download = 'meme.png';\n        link.href = img;\n        link.click();\n      });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n\n    <div className=\"creando\">    \n      <select className=\"select-img\" onChange={onChangeImagen}>\n        <option value=\"fire\">Casa en llamas</option>\n        <option value=\"futurama\">Futurama</option>\n        <option value=\"history\">History Channel</option>\n        <option value=\"matrix\">Matrix</option>\n        <option value=\"philosoraptor\">Philosoraptor</option>\n        <option value=\"smart\">Smart Guy</option>\n        <option value=\"imagen1\">Atardecer</option>\n        <option value=\"imagen2\">Auto PX</option>\n        <option value=\"imagen3\">Maraton</option>\n      </select>\n      <input className=\"linea1C\" onChange={onChangeLinea1} type=\"text\" placeholder='Linea 1'></input>\n      <input className=\"linea2C\" onChange={onChangeLinea2} type=\"text\" placeholder='Linea 2'></input>\n      <button onClick={onClickExportar} className=\"btaExportar\">Descargar</button>\n    </div>\n\n    <div className=\"resultado\" id=\"meme\">\n      <span className=\"linea1R\">{linea1}</span>\n      <span className=\"linea2R\">{linea2}</span>\n      <img className=\"imagen\" src={\"/imagenes/\" + imagen + \".jpg\"} />\n    </div> \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}